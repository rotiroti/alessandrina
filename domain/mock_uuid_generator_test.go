// Code generated by mockery v2.30.16. DO NOT EDIT.

package domain

import (
	uuid "github.com/google/uuid"
	mock "github.com/stretchr/testify/mock"
)

// MockUUIDGenerator is an autogenerated mock type for the UUIDGenerator type
type MockUUIDGenerator struct {
	mock.Mock
}

type MockUUIDGenerator_Expecter struct {
	mock *mock.Mock
}

func (_m *MockUUIDGenerator) EXPECT() *MockUUIDGenerator_Expecter {
	return &MockUUIDGenerator_Expecter{mock: &_m.Mock}
}

// Execute provides a mock function with given fields:
func (_m *MockUUIDGenerator) Execute() uuid.UUID {
	ret := _m.Called()

	var r0 uuid.UUID
	if rf, ok := ret.Get(0).(func() uuid.UUID); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(uuid.UUID)
		}
	}

	return r0
}

// MockUUIDGenerator_Execute_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Execute'
type MockUUIDGenerator_Execute_Call struct {
	*mock.Call
}

// Execute is a helper method to define mock.On call
func (_e *MockUUIDGenerator_Expecter) Execute() *MockUUIDGenerator_Execute_Call {
	return &MockUUIDGenerator_Execute_Call{Call: _e.mock.On("Execute")}
}

func (_c *MockUUIDGenerator_Execute_Call) Run(run func()) *MockUUIDGenerator_Execute_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockUUIDGenerator_Execute_Call) Return(_a0 uuid.UUID) *MockUUIDGenerator_Execute_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockUUIDGenerator_Execute_Call) RunAndReturn(run func() uuid.UUID) *MockUUIDGenerator_Execute_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockUUIDGenerator creates a new instance of MockUUIDGenerator. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockUUIDGenerator(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockUUIDGenerator {
	mock := &MockUUIDGenerator{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
