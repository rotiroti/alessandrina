config:
  plugins:
    # ensure: {}
    expect: {}
  environments:
    smoke-test:
      target: "{{ $processEnvironment.API_URL }}"
      phases:
        - name: "Starting Smoke test"
          duration: 1
          arrivalRate: 3
          maxVusers: 3
    load-test:
      target: "{{ $processEnvironment.API_URL }}"
      phases:
        - name: "Ramp up to peak load in 5 minutes"
          duration: 300
          rampTo: 5
        - name: "Sustain peak load for 10 minutes"
          duration: 600
          arrivalRate: 5
        - name: "Ramp down to zero in 5 minutes"
          duration: 300
          arrivalRate: 5
          rampTo: 0
    stress-test:
      target: "{{ $processEnvironment.API_URL }}"
      phases:
        - name: "Ramp up to peak load in 2 minutes"
          duration: 120
          rampTo: 15
        - name: "Sustain peak load for 5 minutes"
          duration: 300
          arrivalRate: 15
        - name: "Ramp up to peak load in 2 minutes"
          duration: 120
          rampTo: 50
        - name: "Sustain peak load for 5 minutes"
          duration: 300
          arrivalRate: 50
        - name: "Ramp down to zero in 10 minutes"
          duration: 600
          arrivalRate: 50
          rampTo: 0
    spike-test:
      target: "{{ $processEnvironment.API_URL }}"
      phases:
        - name: "Ramp up to peak load in 10 seconds"
          duration: 10
          arrivalRate: 15
        - name: "Sustain peak load for 5 minutes"
          duration: 60
          arrivalRate: 15
        - name: "Spike to 50 vusers for 10 seconds"
          duration: 10
          rampTo: 50
        - name: "Sustain peak load for 3 minutes"
          duration: 60
          arrivalRate: 50
        - name: "Ramp down to zero in 10 minutes"
          duration: 10
          arrivalRate: 50
          rampTo: 15
        - name: "Sustain peak load for 3 minutes"
          duration: 180
          arrivalRate: 15
        - name: "Ramp down to zero in 10 minutes"
          duration: 10
          arrivalRate: 15
          rampTo: 0
  processor: "./generator.js"
  default:
    headers:
      Accept: "application/json"
      Content-Type: "application/json"
  # ensure:
  #   thresholds:
  #     - "http.response_time.p99": 550
  #     - "http.response_time.p95": 300
  #   maxErrors: 0
scenarios:
  - name: "Create, List, Read, Delete"
    flow:
      - function: "generateRandomData"
      - post:
          url: "/books"
          json:
            title: "{{ title }}"
            authors: "{{ authors }}"
            isbn: "{{ isbn }}"
            pages: "{{ pages }}"
            publisher: "{{ publisher }}"
          expect:
            statusCode: 201
            hasProperty: "id"
          capture:
            json: "$.id"
            as: "id"
      - get:
          url: "/books"
          expect:
            statusCode: 200
      - get:
          url: "/books/{{ id }}"
          expect:
            statusCode: 200
      - delete:
          url: "/books/{{ id }}"
          expect:
            statusCode: 204
