# Functional tests for the API endpoints to ensure that they are returning
# the correct status codes and error messages for the most common error cases.
# For this test we assume that we will receive one new user per second during
# one second. Each user will perform one request per second. At the end of the
# test we will have 1 users that have performed 5 requests, each representing
# an error response from the API.
config:
  plugins:
    ensure: {}
    expect: {}
  target: "{{ $processEnvironment.API_URL }}"
  phases:
    - name: "Functional Testing"
      duration: 1
      arrivalRate: 1
      maxVusers: 1
  default:
    headers:
      Accept: "application/json"
      Content-Type: "application/json"
  ensure:
    p95: 400
    maxErrorRate: 0
scenarios:
  - name: "Create, Read, Delete"
    flow:
      # create a new book with invalid payload
      - post:
          url: "/books"
          expect:
            statusCode: 400
      - think: 1

      # retrieve a book with an invalid UUID
      - get:
          url: "/books/1234"
          expect:
            statusCode: 400
      - think: 1

      # retrieve a book with a valid UUID that doesn't exist
      - get:
          url: "/books/1f083dd5-673b-45d7-b81b-fad3bdb7d712"
          expect:
            statusCode: 500
      - think: 1

      # delete a book with an invalid UUID
      - delete:
          url: "/books/1234"
          expect:
            statusCode: 400
      - think: 1

      # delete a book with a valid UUID that doesn't exist
      - delete:
          url: "/books/1f083dd5-673b-45d7-b81b-fad3bdb7d712"
          expect:
            statusCode: 500
